# The bB Linux compiling makefile. The only difference between this and the
# generic makefile is this forces 32-bit binaries and adds a .Linux.x86
# extension to the binary filenames.
#

SHELL=/bin/sh
CHMOD=chmod
CP=cp
RM=rm
MKDIR=mkdir -p
CFLAGS=-O2 -m32
CC=cc
LEX=lex
LEXFLAGS=-t
ARCH=Linux.x86

all:  2600basic.${ARCH} preprocess.${ARCH} postprocess.${ARCH} bbfilter.${ARCH} optimize.${ARCH}

2600basic.${ARCH}: 2600bas.c statements.c keywords.c statements.h keywords.h
	@${MKDIR} build
	${CC} ${CFLAGS} -o build/2600basic.${ARCH} 2600bas.c statements.c keywords.c

postprocess.${ARCH}: postprocess.c
	@${MKDIR} build
	${CC} ${CFLAGS} -o build/postprocess.${ARCH} postprocess.c

bbfilter.${ARCH}: bbfilter.c
	@${MKDIR} build
	${CC} ${CFLAGS} -o build/bbfilter.${ARCH} bbfilter.c

preprocess.${ARCH}: preprocess.lex
	@${MKDIR} build
	${LEX} ${LEXFLAGS}<preprocess.lex>lex.yy.c
	${CC} ${CFLAGS} -o build/preprocess.${ARCH} lex.yy.c
	${RM} -f lex.yy.c

optimize.${ARCH}: optimize.lex
	@${MKDIR} build
	${LEX} ${LEXFLAGS} -i<optimize.lex>lex.yy.c
	${CC} ${CFLAGS} -o build/optimize.${ARCH} lex.yy.c
	${RM} -f lex.yy.c

install: all

clean:
	${RM} -f a.out core build/2600basic.${ARCH} build/preprocess.${ARCH} build/postprocess.${ARCH} build/bbfilter.${ARCH} build/optimize.${ARCH}
